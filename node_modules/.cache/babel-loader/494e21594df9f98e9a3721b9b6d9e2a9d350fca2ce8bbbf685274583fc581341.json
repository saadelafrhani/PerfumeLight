{"ast":null,"code":"var _jsxFileName = \"/home/saad-el-afrhani/Desktop/perfumelight/src/components/Admin/index.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { addDoc, collection, getDocs, deleteDoc, doc, getDoc } from \"firebase/firestore\";\nimport { db } from \"../../firebase/connection\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Admin = () => {\n  _s();\n  const [products, setProducts] = useState([]);\n  const [orders, setOrders] = useState([]);\n  const [loading, setLoading] = useState(false);\n\n  // Fetch products from Firestore\n  useEffect(() => {\n    const fetchProducts = async () => {\n      const productsCollection = collection(db, \"products\");\n      const productSnapshot = await getDocs(productsCollection);\n      const productList = productSnapshot.docs.map(doc => ({\n        ...doc.data(),\n        id: doc.id\n      }));\n      setProducts(productList);\n    };\n    fetchProducts();\n  }, []);\n\n  // Fetch orders and include product details\n  useEffect(() => {\n    const fetchOrders = async () => {\n      const ordersCollection = collection(db, \"orders\");\n      const orderSnapshot = await getDocs(ordersCollection);\n      const orderList = [];\n      for (let orderDoc of orderSnapshot.docs) {\n        const orderData = orderDoc.data();\n        const productIds = orderData.productIds; // Assuming the order contains product IDs\n\n        // Fetch product details for each product ID in the order\n        const productsInOrder = [];\n        for (let productId of productIds) {\n          const productDoc = await getDoc(doc(db, \"products\", productId));\n          const productData = productDoc.data();\n          productsInOrder.push({\n            ...productData,\n            id: productDoc.id\n          });\n        }\n        orderList.push({\n          ...orderData,\n          id: orderDoc.id,\n          products: productsInOrder // Adding the products to the order\n        });\n      }\n      setOrders(orderList);\n    };\n    fetchOrders();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex justify-center min-h-screen p-5\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w-full max-w-4xl\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"text-3xl font-bold text-center mb-6\",\n        children: \"Admin Panel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-6\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-2xl text-center font-semibold mb-4\",\n          children: \"All Orders\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"flex flex-wrap gap-4 justify-center\",\n          children: orders.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"No orders available.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 15\n          }, this) : orders.map(order => /*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"bg-black border-2 border-white p-4 rounded-lg mb-4 w-full sm:w-1/2 md:w-1/3 lg:w-1/4\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex flex-col\",\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                className: \"font-bold text-lg text-white\",\n                children: [\"Order ID: \", order.id]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 72,\n                columnNumber: 21\n              }, this), order.products.map(product => /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"mb-2\",\n                children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"text-white\",\n                  children: [\"Product: \", product.name]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 75,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"text-white\",\n                  children: [\"Price: $\", product.price]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 76,\n                  columnNumber: 25\n                }, this)]\n              }, product.id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 74,\n                columnNumber: 23\n              }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"mt-4 bg-red-500 text-white px-4 py-2 rounded-md hover:bg-red-600 transition\",\n                onClick: () => handleDelete(\"orders\", order.id, setOrders, orders),\n                children: \"Delete Order\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 79,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 19\n            }, this)\n          }, order.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n};\n_s(Admin, \"sVQ05ypT7/rePQFLhXuJIeUy4I0=\");\n_c = Admin;\nexport default Admin;\nvar _c;\n$RefreshReg$(_c, \"Admin\");","map":{"version":3,"names":["React","useState","useEffect","addDoc","collection","getDocs","deleteDoc","doc","getDoc","db","jsxDEV","_jsxDEV","Admin","_s","products","setProducts","orders","setOrders","loading","setLoading","fetchProducts","productsCollection","productSnapshot","productList","docs","map","data","id","fetchOrders","ordersCollection","orderSnapshot","orderList","orderDoc","orderData","productIds","productsInOrder","productId","productDoc","productData","push","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","order","product","name","price","onClick","handleDelete","_c","$RefreshReg$"],"sources":["/home/saad-el-afrhani/Desktop/perfumelight/src/components/Admin/index.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { addDoc, collection, getDocs, deleteDoc, doc, getDoc } from \"firebase/firestore\";\nimport { db } from \"../../firebase/connection\";\n\nconst Admin = () => {\n  const [products, setProducts] = useState([]);\n  const [orders, setOrders] = useState([]);\n  const [loading, setLoading] = useState(false);\n\n  // Fetch products from Firestore\n  useEffect(() => {\n    const fetchProducts = async () => {\n      const productsCollection = collection(db, \"products\");\n      const productSnapshot = await getDocs(productsCollection);\n      const productList = productSnapshot.docs.map((doc) => ({ ...doc.data(), id: doc.id }));\n      setProducts(productList);\n    };\n\n    fetchProducts();\n  }, []);\n\n  // Fetch orders and include product details\n  useEffect(() => {\n    const fetchOrders = async () => {\n      const ordersCollection = collection(db, \"orders\");\n      const orderSnapshot = await getDocs(ordersCollection);\n      const orderList = [];\n\n      for (let orderDoc of orderSnapshot.docs) {\n        const orderData = orderDoc.data();\n        const productIds = orderData.productIds; // Assuming the order contains product IDs\n\n        // Fetch product details for each product ID in the order\n        const productsInOrder = [];\n        for (let productId of productIds) {\n          const productDoc = await getDoc(doc(db, \"products\", productId));\n          const productData = productDoc.data();\n          productsInOrder.push({ ...productData, id: productDoc.id });\n        }\n\n        orderList.push({\n          ...orderData,\n          id: orderDoc.id,\n          products: productsInOrder, // Adding the products to the order\n        });\n      }\n\n      setOrders(orderList);\n    };\n\n    fetchOrders();\n  }, []);\n\n  return (\n    <div className=\"flex justify-center min-h-screen p-5\">\n      <div className=\"w-full max-w-4xl\">\n        <h1 className=\"text-3xl font-bold text-center mb-6\">Admin Panel</h1>\n\n        {/* Show Orders */}\n        <div className=\"mb-6\">\n          <h2 className=\"text-2xl text-center font-semibold mb-4\">All Orders</h2>\n          <ul className=\"flex flex-wrap gap-4 justify-center\">\n            {orders.length === 0 ? (\n              <p>No orders available.</p>\n            ) : (\n              orders.map((order) => (\n                <li\n                  key={order.id}\n                  className=\"bg-black border-2 border-white p-4 rounded-lg mb-4 w-full sm:w-1/2 md:w-1/3 lg:w-1/4\"\n                >\n                  <div className=\"flex flex-col\">\n                    <h3 className=\"font-bold text-lg text-white\">Order ID: {order.id}</h3>\n                    {order.products.map((product) => (\n                      <div key={product.id} className=\"mb-2\">\n                        <p className=\"text-white\">Product: {product.name}</p>\n                        <p className=\"text-white\">Price: ${product.price}</p>\n                      </div>\n                    ))}\n                    <button\n                      className=\"mt-4 bg-red-500 text-white px-4 py-2 rounded-md hover:bg-red-600 transition\"\n                      onClick={() => handleDelete(\"orders\", order.id, setOrders, orders)}\n                    >\n                      Delete Order\n                    </button>\n                  </div>\n                </li>\n              ))\n            )}\n          </ul>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Admin;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}